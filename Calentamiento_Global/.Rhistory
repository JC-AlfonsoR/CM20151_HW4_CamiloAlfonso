library(Quandl)
library(ggplot2)
library(lubridate)
```
```{r}
#Descargar datos
Data <- Quandl("CURRFX/USDCOP", trim_start="2000-01-01", trim_end="2015-02-23")
```
```{r}
#Imprimir los 5 primeros datos
head(Data,n=5L)
```
```{r}
#Graficar la serie de tiempo
gp <- ggplot(Data) + geom_point(aes(x=Date,y = Rate))
gp <- gp + labs(title=paste("USD-COP exchange rate from ",Data[nrow(Data),1]," to ",Data[1,1]))
gp
```
```{r}
#Agregar columna de 'year' para poder hacer facets acorde a 'year'
Data["year"] <- lapply(Data["Date"],year)
Data["month"] <- lapply(Data["Date"],month)
sp <- ggplot(Data,aes(x=month, y=Rate))
sp + facet_wrap(~year,scales="free")
sp
sp <- ggplot(Data,aes(x=month, y=Rate))
sp
sp <- ggplot(Data,aes(x=month, y=Rate)) + geom_line
sp <- ggplot(Data,aes(x=month, y=Rate)) + geom_line()
sp + facet_wrap(~year,scales="free")
sp
sp <- ggplot(Data,aes(x=month, y=Rate)) + geom_line()
sp + facet_wrap(~year,scales="free")
sp
sp <- ggplot(Data,aes(x=month, y=Rate)) + geom_point(shape=1)
sp + facet_wrap(~year,scales="free")
?lubridate
date
View(Data)
date[1,1]
date[1]
date[2]
library(lubridate)
date <- lapply(Data["Date"],ymd)
date <- Data["Date"]
lm(rate ~ date)
date <- lapply(Data["Date"],ymd)
lm(rate ~ date)
date <- lapply(Data["Date"],ts)
date
date <- lapply(Data["Date"],ymd)
date
d <- lapply(date,ts)
d
xts(Data$Rate, as.Date(Data$Date, format='%m/%d/%Y')
asd
xts(Data["Rate"], as.Date(Data["Date"], format='%m/%d/%Y')
$Date = as.Date(x$Date,format="%m/%d/%Y")
Data$Date = as.Date(Data$Date,format="%m/%d/%Y")
Data = xts(Data=Data$Rate, order.by=Data$Date)
library(Quandl)
library(ggplot2)
library(lubridate)
```
```{r}
#Descargar datos
Data <- Quandl("CURRFX/USDCOP", trim_start="2000-01-01", trim_end="2015-02-23")
x$Date = as.Date(x$Date,format="%m/%d/%Y"
as
Data$Date = as.Date(Data$Date,format="%y/%m/%d"
sa
x$Date = as.Date(x$Date,format="%Y/%m/%d"
p+aom}
lm(Data["Rate"]~Data[Date])
View(Data)
lm(Data["Rate"]~Data["Date"])
lm(Data["Rate"]~Data["Date"])
d <- lapply(Data["Date"],ymd)
a = ts(d)
d
install.packages("MODISTools")
library(ggplot2)
library(MODISTools)
gdURL <- "http://tiny.cc/gapminder"
gDat <- read.delim(file = gdURL)
str(gDat)
Bgt_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Bgt_data <- read.delim(file = Bgt_url)
str(Bgt_url)
View(Bgt_data)
library(gdata)
library(gdata)
install.packages("gdata")
Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Bogota_data <- read.table(Bogota_url)
View(Bogota_data)
str(Bogota_data)
head(Bogota_data)
View(Bogota_data)
View(Bogota_data)
Bogota_data[1,]
Bogota_data[,1]
View(Bogota_data)
library(gdata)
library(ggplot2)
library(MODISTools)
#Links
Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Cali_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802590000_13_0/station.txt"
Bucaramanga_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800940000_13_0/station.txt"
Barranquilla_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800280000_13_0/station.txt"
Ipiales_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305803700000_13_0/station.txt"
Bogota_rdata <- read.table(Bogota_url) #raw_data
library(gdata)
library(ggplot2)
library(MODISTools)
#Links
Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Cali_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802590000_13_0/station.txt"
Bucaramanga_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800940000_13_0/station.txt"
Barranquilla_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800280000_13_0/station.txt"
Ipiales_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305803700000_13_0/station.txt"
Bogota_rdata <- read.table(Bogota_url) #raw_data
library(gdata)
library(ggplot2)
library(MODISTools)
#Links
Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Cali_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802590000_13_0/station.txt"
Bucaramanga_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800940000_13_0/station.txt"
Barranquilla_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800280000_13_0/station.txt"
Ipiales_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305803700000_13_0/station.txt"
Bogota_rdata <- read.table(Bogota_url) #raw_data
Cali_rdata <- read.table(Cali_url)
Bucaramanga_rdata <- read.table(Bucaramanga_url)
Barranquilla_rdata <- read.table(Barranquilla_url)
Ipiales_rdata <- read.table(Ipiales_url)
Bogota_rdata
Bogota_rdata[1:,]
Bogota_rdata[1:]
Bogota_rdata[1,]
Bogota_rdata[,1]
Bogota_rdata[,2]
install.packages("reshape2")
install.packages("plyr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("data.table")
install.packages("Lahman")
pew <- read.delim(
file = "http://stat405.had.co.nz/data/pew.txt",
header = TRUE,
stringsAsFactors = FALSE,
check.names = F
)
head(pew)
View(pew)
View(pew)
library(reshape)
pew_tidy <- melt(
library(reshape2)
pew_tidy <- melt(
data = pew,
id = "religion",
variable.name = "income",
value.name = "frequency"
)
library(reshape2)
pew_tidy <- melt(
data = pew,
id = "religion",
variable.name = "income",
value.name = "frequency"
)
View(pew_tidy)
View(pew)
tb <- read.csv(
file = "data/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
tb <- read.csv(
file = "http://stat405.had.co.nz/data/tb.csv",
header = TRUE,
stringsAsFactors = FALSE
)
View(tb)
Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Bogota_rdata <- read.table(Bogota_url)
Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Bogota_rdata <- read.table(Bogota_url)
Bucaramanga_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800940000_13_0/station.txt"
Barranquilla_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800280000_13_0/station.txt"
#Cargar datos crudos
Bogota_rdata <- read.table(Bogota_url)
Barranquilla_rdata <- read.table(Barranquilla_url)
Bucaramanga_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305800940000_13_0/station.txt"
ls
ls
cd IMEC
cd(IMEC)
setwd("~/GitHub/CM20151_HW4_CamiloAlfonso/Calentamiento_Global")
Bogota <- read.table(
file = "Bogota.txt",
header = TRUE,
)
Bogota <- read.table(
file = "Bogota.txt",
header = TRUE)
n <- names(Bogota)[1:13] #Seleccionar los nombres de las columnas a usar
Bogota <- Bogota[c(n)] #Eliminar las columnas que no se usan
Bogota_tidy <- melt(
data = Bogota,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
)
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
#Ordenar datos
Bogota_tidy <- melt(
data = Bogota,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
)
Bogota_tidy$Day = 1
Bogota_tidy$City = "Bogota"
Bogota_tidy <- Bogota_tidy[c("YEAR","Month","Day","City","Temperature")]
View(Bogota_tidy)
a = ["asd","asd"]
a = [c["asd","asd"]]
a = [c("asd","asd")]
pkgs <- c('reshape2', 'plyr', 'ggplot2', 'dplyr', 'data.table', 'Lahman')
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
> Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
for(C in Ciudades) {
C
}
> Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
for(C in Ciudades) {
C
}
for(C in Ciudades) {
print(C)
}
for(C in Ciudades) {
print(C+".txt")
}
for(C in Ciudades) {
print(C,".txt")
}
print(Paste(C,".txt"))
for(C in Ciudades) {
print(Paste(C,".txt"))
}
library(base)
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
for(C in Ciudades) {
print(Paste(C,".txt"))
}
for(C in Ciudades) {
print(paste(C,".txt"))
}
for(C in Ciudades) {
print(paste(C,".txt",sep=""))
}
Ciudades(0)
Ciudades[0]
Ciudades[1]
C = Ciudades[1]
Data_raw <- read.table(
file = paste(C,".txt",sep=""),
header = TRUE)
n <- names(Data_raw)[1:13] #Seleccionar los nombres de las columnas a usar
Data_raw <- Data_raw[c(n)] #Guardar solo las 13 primeras columnas
Data_tidy <- melt(
data = Data_raw,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
)
Data_tidy$Day = 1
Data_tidy$City = C
View(Data_tidy)
Data = []
Data = [[]]
Data = [c()
Data = [c()]
Data = [c("")]
n = c()
Data = data.frame(n,n,n)
Data
Data_tidy
Data = rbind(Data,Data_tidy)
Data
Data = rbind(Data,Data_tidy)
Data = data.frame(c(),c(),c())
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
library(base)
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
a = c() #Serie vaica
Data = data.frame(a,a,a) # DataFrame vacio. En este data frame se van a guardar los datos tidy
for(C in Ciudades) {
#print(paste(C,".txt",sep=""))
Data_raw <- read.table(
file = paste(C,".txt",sep=""),
header = TRUE)
n <- names(Data_raw)[1:13] #Seleccionar los nombres de las columnas a usar
Data_raw <- Data_raw[c(n)] #Guardar solo las 13 primeras columnas
# Tidy data. Hacer melt para generar datos tidy
Data_tidy <- melt(
data = Data_raw,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
)
#Agregar columnas de Ciudad y dia
Data_tidy$Day = 1
Data_tidy$City = C
Data = rbind(Data,Data_tidy) #Agrupar todos los datos en un unico DataFrame
}
View(Data)
View(Data)
names(Data)
Data <- Data["YEAR","Month","Day","City","Temperature"]
Data <- Data[["YEAR","Month","Day","City","Temperature"]]
Data <- Data[c("YEAR","Month","Day","City","Temperature")]
View(Data)
rename(Data, c("YEAR"="aÃ±o", "Month"="mes", "Day"="dia", "City"="ciudad","Temperature"="temperatura"))
names(Data)
rename(Data, c("YEAR"="anno", "Month"="mes", "Day"="dia", "City"="ciudad","Temperature"="temperatura"))
View(Data)
d <- data.frame(alpha=1:3, beta=4:6, gamma=7:9)
View(d)
rename(d, c("beta"="two", "gamma"="three"))
?rename
x <- c("a" = 1, "b" = 2, d = 3, 4)
x <- rename(x, replace=c("d" = "c"))
rename(Data, replace= c("YEAR"="anno", "Month"="mes", "Day"="dia", "City"="ciudad","Temperature"="temperatura"))
rename(Data, replace= c(YEAR="anno", "Month"="mes", "Day"="dia", "City"="ciudad","Temperature"="temperatura"))
rename(Data, replace= c(YEAR=anno))
rename(Data, replace= c(YEAR="anno"))
names(Data) <- c('A','B','C','D','E')
View(Data)
names(Data) <- c('anno','mes','fecha','ciudad','temperatura')
View(Data)
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
a = c() #Serie vacia
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
a = c() #Serie vacia
Data = data.frame(a,a,a) # DataFrame vacio. En este data frame se van a guardar los datos tidy
for(C in Ciudades) {
#Cargar datos
Data_raw <- read.table(
file = paste(C,".txt",sep=""),
header = TRUE)
n <- names(Data_raw)[1:13] #Seleccionar los nombres de las columnas a usar
Data_raw <- Data_raw[c(n)] #Guardar solo las 13 primeras columnas
# Tidy data. Hacer melt para generar datos tidy
Data_tidy <- melt(
data = Data_raw,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
#Agregar columnas de Ciudad y dia
)
Data_tidy$Day = 1
Data_tidy$City = C
Data = rbind(Data,Data_tidy) #Agrupar todos los datos en un unico DataFrame
}
names(Data) <- c('anno','mes','fecha','ciudad','temperatura')
# Ordenar las columnas
Data <- Data[c("YEAR","Month","Day","City","Temperature")]
names(Data) <- c('anno','mes','fecha','ciudad','temperatura')
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
a = c() #Serie vacia
Data = data.frame(a,a,a) # DataFrame vacio. En este data frame se van a guardar los datos tidy
for(C in Ciudades) {
#Cargar datos
Data_raw <- read.table(
file = paste(C,".txt",sep=""),
header = TRUE)
n <- names(Data_raw)[1:13] #Seleccionar los nombres de las columnas a usar
Data_raw <- Data_raw[c(n)] #Guardar solo las 13 primeras columnas
# Tidy data. Hacer melt para generar datos tidy
data = Data_raw,
id = "YEAR",
variable.name = "Month",
Data_tidy <- melt(
value.name = "Temperature"
)
#Agregar columnas de Ciudad y dia
Data_tidy$Day = 1
Data_tidy$City = C
Data = rbind(Data,Data_tidy) #Agrupar todos los datos en un unico DataFrame
}
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
a = c() #Serie vacia
Data = data.frame(a,a,a) # DataFrame vacio. En este data frame se van a guardar los datos tidy
for(C in Ciudades) {
#Cargar datos
Data_raw <- read.table(
file = paste(C,".txt",sep=""),
header = TRUE)
n <- names(Data_raw)[1:13] #Seleccionar los nombres de las columnas a usar
Data_raw <- Data_raw[c(n)] #Guardar solo las 13 primeras columnas
# Tidy data. Hacer melt para generar datos tidy
Data_tidy <- melt(
data = Data_raw,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
)
#Agregar columnas de Ciudad y dia
Data_tidy$Day = 1
Data_tidy$City = C
Data = rbind(Data,Data_tidy) #Agrupar todos los datos en un unico DataFrame
}
# Ordenar las columnas
Data <- Data[c("YEAR","Month","Day","City","Temperature")]
names(Data) <- c('anno','mes','fecha','ciudad','temperatura')
View(Data)
df$question[df$variable %in% c("var2", "var3", "var4")] <- "text"
df$est[df$b == 0] <- 23
View(Data)
Data$temperatura[Data$temperature ==999.9] <- 0
View(Data)
Data$temperature[Data$temperature == 999.9] <- 0
Data$temperatura[Data$temperature == 999.9] <- 0
View(Data)
Data$temperatura[Data$temperatura == 999.9] <- 0
View(Data)
Data$temperatura[Data$temperatura == 999.9] <- nan
Data$temperatura[Data$temperatura == 999.9] <- Nan
Data$temperatura[Data$temperatura == 999.9] <- NaN
View(Data)
Data$temperatura[Data$temperatura == 999.9] <- none
Data$temperatura[Data$temperatura == 999.9] <- None
Data$temperatura[Data$temperatura == 999.9] <- NaN
View(Data)
Data$temperatura[Data$temperatura == 0] <- NaN
View(Data)
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
#Links
#Bogota_url <- "http://data.giss.nasa.gov/tmp/gistemp/STATIONS/tmp_305802220000_13_0/station.txt"
Ciudades <- c('Bogota', 'Barranquilla', 'Bucaramanga', 'Cali', 'Ipiales')
a = c() #Serie vacia
Data = data.frame(a,a,a) # DataFrame vacio. En este data frame se van a guardar los datos tidy
for(C in Ciudades) {
#Cargar datos
Data_raw <- read.table(
file = paste(C,".txt",sep=""),
header = TRUE)
n <- names(Data_raw)[1:13] #Seleccionar los nombres de las columnas a usar
Data_raw <- Data_raw[c(n)] #Guardar solo las 13 primeras columnas
# Tidy data. Hacer melt para generar datos tidy
Data_tidy <- melt(
data = Data_raw,
id = "YEAR",
variable.name = "Month",
value.name = "Temperature"
)
#Agregar columnas de Ciudad y dia
Data_tidy$Day = 1
Data_tidy$City = C
Data = rbind(Data,Data_tidy) #Agrupar todos los datos en un unico DataFrame
}
# Ordenar las columnas
Data <- Data[c("YEAR","Month","Day","City","Temperature")]
names(Data) <- c('anno','mes','fecha','ciudad','temperatura')
#Reemplazar datos de temperatura = 999.9 con NaN
Data$temperatura[Data$temperatura == 999.9] <- NaN
View(Data)
Data$temperatura[Data$temperatura == 0] <- NaN
library(lubridate)
?plyr
help(plyr::)
help plyr::
help plyr
library(lubridate)
dmy("04-06-2011")
dmy("04-06-2011")
dmy(paste(1,Data$mes,Data$anno,sep="-"))
Data$fecha <- dmy(paste(1,Data$mes,Data$anno,sep="-"))
View(Data)
?dmy
dmy("1990-FEB-1)
asd)
asd
as
kjbsajkd
